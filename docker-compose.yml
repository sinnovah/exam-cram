# Version of docker-compose syntax
version: "3.9"

# Services needed for the project
services:
  # Backend service
  backend:
    # Build configurations
    build:
      # Path to Dockerfile to build the image
      context: ./backend
      # Run as development environment
      args:
        - DEV=true
    # Map local port 8000 to container port 8000
    ports:
      - "8000:8000"
    # Sync app local directory to container directory
    volumes:
      - ./backend:/backend
    # Default command waits for DB, migrates then starts the server
    command: >
      sh -c "python manage.py wait_on_database &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    # Environment variables
    environment:
      - DB_HOST=db
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - ADMIN_PATH=${ADMIN_PATH}
    # Wait for db service to be ready before starting this service
    depends_on:
      - db

  # Database service
  db:
    # Use postgres alpine image
    image: postgres:15-alpine
    # Persist dev database data
    volumes:
      - dev-db-data:/var/lib/postgresql/data
    # Environment variables
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}

volumes:
  # Persist dev database data
  dev-db-data: